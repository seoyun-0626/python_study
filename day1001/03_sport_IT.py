from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression


sports = [
    "야구 경기에서 홈런이 터졌다",
    "축구 대표팀이 승리했다",
    "농구 선수의 리바운드가 인상적이었다",
    "테니스 경기에서 랠리가 길어졌다",
    "야구 투수가 노히트노런을 기록했다",
    "배구 결승전이 오늘 열린다",
    "마라톤 선수 기록이 단축됐다",
    "골키퍼가 페널티킥을 막아냈다",
    "스케이트 선수가 금메달을 땄다",
    "수영 선수의 자유형 기록이 경신됐다",
    "축구 경기에서 멋진 프리킥 골이 터졌다",
    "선수들이 경기장에서 몸을 풀고 있다",
    "스트라이커가 헤딩슛으로 득점했다",
    "심판이 오프사이드 반칙을 선언했다",
    "골키퍼가 결정적인 세이브를 해냈다",
    "수비수가 공을 걷어냈다",
    "교체 선수가 투입되면서 분위기가 달라졌다",
    "경기 막판에 극적인 동점골이 나왔다",
    "관중들이 함성을 지르며 응원했다",
    "미드필더가 정확한 스루패스를 보냈다",
    "감독이 전술을 지시하고 있다",
    "페널티킥이 골망을 흔들었다",
    "코너킥에서 헤더 골이 들어갔다",
    "선수들이 라커룸에서 준비를 하고 있다",
    "경기장 잔디 상태가 좋지 않았다",
    "주심이 옐로카드를 꺼냈다",
    "레드카드로 선수가 퇴장당했다",
    "주장 완장을 찬 선수가 동료를 독려했다",
    "스코어가 3대2로 바뀌었다",
    "연장전에 돌입했다",
    "승부차기까지 이어졌다",
    "관중석이 만원이었다",
    "골대가 공을 맞고 튕겨 나왔다",
    "크로스가 정확하게 연결됐다",
    "오른쪽 윙어가 빠른 돌파를 시도했다",
    "드리블 돌파가 성공했다",
    "강력한 슛이 크로스바 위로 넘어갔다",
    "전반전이 종료되었다",
    "후반전 추가 시간이 주어졌다",
    "챔피언스리그 결승전이었다",
    "국가대표팀이 출전했다",
    "감독의 교체 카드가 적중했다",
    "팬들이 선수 이름을 연호했다",
    "경기장이 폭우로 미끄러웠다",
    "주심이 경기를 종료시켰다",
    "무승부로 끝났다",
    "홈팀이 승리했다",
    "원정팀이 역전승을 거뒀다",
    "파울이 잦았다",
    "프리킥 위치를 놓고 항의가 있었다",
    "비디오 판독(VAR)이 진행됐다",
    "선수의 부상으로 경기가 중단됐다",
    "경기장이 환호로 가득했다",
    "승리 인터뷰가 이어졌다",
    "기자회견에서 감독이 소감을 말했다",
    "선수들이 유니폼을 교환했다",
    "팀워크가 돋보였다",
    "시즌 첫 골이 터졌다",
    "리그 순위가 바뀌었다",
    "우승컵을 들어올렸다",
    "수비 라인이 단단했다",
    "공격수가 찬스를 놓쳤다",
    "중거리 슛이 골망을 갈랐다",
    "왼쪽 풀백이 오버래핑을 했다",
    "후반 교체 카드가 승부를 갈랐다",
    "관중들이 플래카드를 흔들었다",
    "코너킥 루틴이 성공했다",
    "해외 리그에서 활약하는 선수가 합류했다",
    "선수들이 팬들에게 인사했다",
    "감독이 벤치에서 크게 소리쳤다",
    "경기장에서 응원가가 울려 퍼졌다",
    "새로운 전술 포메이션이 실험됐다",
    "패스 성공률이 높았다",
    "공격수가 수비수를 제쳤다",
    "드리블 후 슛이 골대 옆을 스쳤다",
    "전술 훈련이 효과를 보였다",
    "스프린트 속도가 인상적이었다",
    "주심 보조심이 깃발을 들었다",
    "골 장면이 하이라이트로 나왔다",
    "선수들이 하프라인에서 대기했다",
    "중앙 미드필더가 경기를 조율했다",
    "스트라이커가 해트트릭을 기록했다",
    "팬들이 폭죽을 터뜨렸다",
    "경기장 분위기가 뜨거웠다",
    "스코어보드가 갱신됐다",
    "경기 종료 휘슬이 울렸다",
    "우승 세레모니가 열렸다",
    "상대팀 감독이 패배를 인정했다",
    "기록원이 득점을 기록했다",
    "팀 의사가 부상 선수를 살폈다",
    "경기 전 기자회견이 있었다",
    "훈련장에서 전술 훈련이 이어졌다",
    "신인 선수가 데뷔전을 치렀다",
    "베테랑 선수가 리더십을 보였다",
    "스타 선수가 이적했다",
    "스폰서 광고가 경기장에 걸렸다",
    "리그 최종전이었다",
    "팬서비스 행사도 열렸다",
    "경기 후 도로가 붐볐다",
    "경기장 앞에서 굿즈가 판매됐다"
]


it = [
    "새 그래픽카드가 출시되었다",
    "파이썬으로 웹 서비스를 만들었다",
    "인공지능 모델 성능이 향상됐다",
    "스마트폰 배터리 효율이 좋아졌다",
    "리눅스 서버를 배포했다",
    "데이터베이스 인덱스를 최적화했다",
    "클라우드 요금제가 변경되었다",
    "프론트엔드 성능을 개선했다",
    "GPU 가속을 적용했다",
    "API 응답 속도가 빨라졌다",
    "새로운 스마트폰 모델이 발표되었다",
    "서버가 다운되어 복구 작업이 진행 중이다",
    "인공지능 음성 인식 정확도가 향상됐다",
    "프로그래밍 언어 파이썬이 인기를 끌고 있다",
    "새로운 소프트웨어 업데이트가 배포됐다",
    "클라우드 서비스 사용자가 늘고 있다",
    "데이터베이스 최적화가 필요하다",
    "머신러닝 모델 학습이 완료됐다",
    "사이버 보안 위협이 증가하고 있다",
    "암호화 기술이 강화되었다",
    "스타트업이 새로운 앱을 출시했다",
    "오픈소스 프로젝트가 활발하다",
    "사용자가 버그를 신고했다",
    "UI 디자인이 개선되었다",
    "UX 테스트가 진행됐다",
    "백엔드 서버를 확장했다",
    "API 응답 속도가 늦다",
    "캐시를 적용해서 성능을 올렸다",
    "GPU 연산 속도가 빨라졌다",
    "코드 리뷰가 이루어졌다",
    "버전 관리 시스템 Git이 사용됐다",
    "리눅스 배포판을 설치했다",
    "웹 브라우저 호환성 문제가 있었다",
    "HTML과 CSS로 웹페이지를 만들었다",
    "자바스크립트 코드가 실행됐다",
    "네트워크 트래픽이 급증했다",
    "데이터 분석 결과가 시각화되었다",
    "서버 로그가 쌓이고 있다",
    "클라우드 요금이 인상됐다",
    "인공지능 이미지 생성 기술이 소개됐다",
    "챗봇 서비스가 상용화됐다",
    "스마트워치 기능이 업그레이드됐다",
    "사물인터넷 기기가 연결됐다",
    "5G 네트워크 속도가 빠르다",
    "블록체인 거래가 검증됐다",
    "암호화폐 시세가 급등했다",
    "사이버 공격이 탐지됐다",
    "보안 패치가 배포됐다",
    "API 문서가 업데이트됐다",
    "데이터셋을 정제했다",
    "클러스터링 알고리즘이 적용됐다",
    "딥러닝 모델이 학습을 시작했다",
    "로봇 제어 소프트웨어가 개발됐다",
    "가상현실 게임이 출시됐다",
    "증강현실 앱이 인기를 끌고 있다",
    "전자상거래 플랫폼이 성장했다",
    "결제 시스템이 개선됐다",
    "사용자가 로그인을 시도했다",
    "토큰 인증 방식이 도입됐다",
    "이메일 서버가 장애를 일으켰다",
    "새로운 하드웨어 칩이 개발됐다",
    "운영체제 버전이 업데이트됐다",
    "보안 로그가 기록됐다",
    "API 키가 발급됐다",
    "코드 에디터가 개선됐다",
    "개발 환경이 설정됐다",
    "테스트 자동화가 도입됐다",
    "컨테이너 기술이 확산됐다",
    "쿠버네티스 클러스터가 배포됐다",
    "클라우드 인프라가 확장됐다",
    "서버리스 컴퓨팅이 도입됐다",
    "데이터 웨어하우스가 구축됐다",
    "실시간 스트리밍 서비스가 제공됐다",
    "인공지능 번역 서비스가 등장했다",
    "이미지 인식 정확도가 높아졌다",
    "딥페이크 기술이 논란이 됐다",
    "디지털 전환이 가속화됐다",
    "스마트시티 프로젝트가 시작됐다",
    "자율주행차 소프트웨어가 테스트됐다",
    "드론 제어 시스템이 개발됐다",
    "양자컴퓨팅 연구가 활발하다",
    "에지 컴퓨팅이 확산됐다",
    "분산 시스템 성능이 향상됐다",
    "데이터 시각화 도구가 업데이트됐다",
    "소셜미디어 플랫폼이 성장했다",
    "온라인 광고 기술이 발전했다",
    "검색 알고리즘이 개선됐다",
    "추천 시스템이 정교해졌다",
    "클라우드 스토리지가 확장됐다",
    "개발자가 해커톤에 참가했다",
    "사이버 보안 회의가 열렸다",
    "개발자 포럼이 개최됐다",
    "코딩 교육 프로그램이 확대됐다",
    "AI 연구소가 설립됐다",
    "디지털 헬스케어 서비스가 성장했다",
    "핀테크 기업이 투자받았다",
    "스마트 농업 기술이 적용됐다",
    "메타버스 서비스가 공개됐다",
    "데이터 윤리 문제가 논의됐다",
    "AI 법률 규제가 강화됐다",
    "프로그래밍 대회가 개최됐다",
    "IoT 센서가 도시 곳곳에 설치됐다",
    "새로운 API 프레임워크가 공개됐다"
]


X_train = sports + it  # 문장을 합치고 
y_train = [0]*len(sports) + [1]*len(it) # 0=스포츠, 1=IT
label_names = {0:'스포츠', 1:'IT'} # 편의를 위해서 준비 

from konlpy.tag import Okt
okt = Okt()

def tokenize(text):
    return okt.nouns(text)

# 벡터화
vec = TfidfVectorizer(tokenizer=tokenize, lowercase=True)
X_train_vec = vec.fit_transform(X_train)
print('---도대체 넌 뭐야 X_train_vec (Tfidf 돌린놈)')
print(X_train_vec)
print()

import pandas as pd

df_tfidf = pd.DataFrame(X_train_vec.toarray(),
                        columns=vec.get_feature_names_out())
print(df_tfidf)

print('----- 너의 단어사전 단어목록 -------')
print(vec.vocabulary_)
print()

# 모델학습
clf = LogisticRegression(max_iter=1000)
clf.fit(X_train_vec,y_train)

print('------- 훈련 끝 -------')

samples = [
    '어제 야구장에서 응원했어',
    '서버에 새로운 API를 배포했다',
    '축구 선수의 패스가 정확했다',
    '딥러닝 모델을 파인듀닝했다',
    '축구선수가 컴퓨터를 패스하면 발이 아프다',
]


# 예측 및 출력
X_samples_vec = vec.transform(samples)
pred = clf.predict(X_samples_vec)
proba = clf.predict_proba(X_samples_vec)

print('----- 예측 결과 -----')
for text, p, prob in zip(samples, pred, proba):
    print(f'- 문장: {text}')
    print(f' -> 예측 라벨: {label_names[int(p)]} (확률 IT={prob[1]:.3f}, 스포츠={prob[0]:.3f})')


